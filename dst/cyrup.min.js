/*
    Name: cyrup
    Version: 0.5.0
    License: MPL-2.0
    Author: Alexander Elias
    Email: alex.steven.elias@gmail.com
    This Source Code Form is subject to the terms of the Mozilla Public
    License, v. 2.0. If a copy of the MPL was not distributed with this
    file, You can obtain one at http://mozilla.org/MPL/2.0/.
*/
var _slicedToArray=function(){function a(a,b){var c=[],d=!0,e=!1,f=void 0;try{for(var g,h=a[Symbol.iterator]();!(d=(g=h.next()).done)&&(c.push(g.value),!(b&&c.length===b));d=!0);}catch(a){e=!0,f=a}finally{try{!d&&h["return"]&&h["return"]()}finally{if(e)throw f}}return c}return function(b,c){if(Array.isArray(b))return b;if(Symbol.iterator in Object(b))return a(b,c);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_async=function(){try{if(isNaN.apply(null,{}))return function(a){return function(){try{return Promise.resolve(a.apply(this,arguments))}catch(a){return Promise.reject(a)}}}}catch(a){}return function(a){return function(){for(var b=[],c=0;c<arguments.length;c++)b[c]=arguments[c];try{return Promise.resolve(a.apply(this,b))}catch(a){return Promise.reject(a)}}}}();function _await(a,b,c){return c?b?b(a):a:(a=Promise.resolve(a),b?a.then(b):a)}(function(a,b){"object"===("undefined"==typeof exports?"undefined":_typeof(exports))&&"undefined"!=typeof module?module.exports=b():"function"==typeof define&&define.amd?define("Cyrup",b):a.Cyrup=b()})(this,function(){"use strict";var a={ENCODING:"hex",ITERATIONS:999999,KEY:32,TAG:16,SALT:16,VECTOR:12,RANDOM:48,HASH:"sha-512",ALGORITHM:"aes-256-gcm",random:_async(function(a){var b=this,c=b;return a=a||c.RANDOM,_await(c.randomBytes(a),function(a){return _await(c.bufferToHex(a))})}),hash:_async(function(a,b){var c=this,d=c;if(!a)throw new Error("Cyrup.hash - item argument required");return b=d.normalizeHash(b||d.HASH),_await(d.stringToBuffer(a),function(a){return _await(d.createHash(a,b),function(a){return _await(d.bufferToHex(a))})})}),compare:_async(function(a,b){var c=this,d=c;if(!b)throw new Error("Cyrup.compare - key argument required");if(!a)throw new Error("Cyrup.compare - password argument required");return _await(d.hexToBuffer(b.split(":")[1]),function(c){return _await(d.key(a,{salt:c}),function(a){return a===b})})}),key:_async(function(a,b){var c=this,d=c;if(!a)throw new Error("Cyrup.key - item argument required");return b=b||{},b.size=b.size||d.KEY,b.salt=b.salt||d.SALT,b.iterations=b.iterations||d.ITERATIONS,b.hash=d.normalizeHash(b.hash||d.HASH),_await(Promise.all(["string"==typeof a?d.stringToBuffer(a):a,"string"==typeof b.salt?d.stringToBuffer(b.salt):"number"==typeof b.salt?d.randomBytes(b.salt):b.salt]),function(a){var c=_slicedToArray(a,2),e=c[0],f=c[1];return _await(d.pbkdf2(e,f,b.iterations,b.size,b.hash),function(a){return _await(Promise.all([d.bufferToHex(a),d.bufferToHex(f)]),function(a){var b=_slicedToArray(a,2),c=b[0],d=b[1];return c+":"+d})})})}),encrypt:_async(function(a,b,c,d){var e=this,f=e;if(!b)throw new Error("Cyrup.encrypt - key argument required");if(!a)throw new Error("Cyrup.encrypt - data argument required");return b=b.split(":"),d=d||f.VECTOR,c=f.normalizeAlgorithm(c||f.ALGORITHM),_await(Promise.all([f.hexToBuffer(b[0]),"string"==typeof a?f.stringToBuffer(a):a,"string"==typeof d?f.stringToBuffer(d):f.randomBytes(d)]),function(a){var b=_slicedToArray(a,3),d=b[0],e=b[1],g=b[2];return _await(f.cipher(c,d,g,e),function(a){return _await(Promise.all([f.bufferToHex(a),f.bufferToHex(g)]),function(a){var b=_slicedToArray(a,2),c=b[0],d=b[1];return c+":"+d})})})}),decrypt:_async(function(a,b,c){var d=this,e=d;if(!b)throw new Error("Cyrup.decrypt - key argument required");if(!a)throw new Error("Cyrup.decrypt - data argument required");return c=e.normalizeAlgorithm(c||e.ALGORITHM),b=b.split(":"),a=a.split(":"),_await(Promise.all([e.hexToBuffer(b[0]),e.hexToBuffer(a[0]),e.hexToBuffer(a[1])]),function(a){var b=_slicedToArray(a,3),d=b[0],f=b[1],g=b[2];return _await(e.decipher(c,d,g,f),function(a){return _await(e.bufferToString(a))})})})};if("undefined"==typeof window){var b=require("util"),c=require("crypto"),d=b.promisify(c.pbkdf2),e=b.promisify(c.randomBytes);a.normalizeHash=function(a){return a.replace("-","").toLowerCase()},a.normalizeAlgorithm=function(a){return 0===a.toLowerCase().indexOf("aes")?a.toLowerCase():a},a.hexToBuffer=_async(function(a){return Buffer.from(a,"hex")}),a.bufferToHex=_async(function(a){return a.toString("hex")}),a.stringToBuffer=_async(function(a){return Buffer.from(a,"utf8")}),a.bufferToString=_async(function(a){return a.toString("utf8")}),a.createHash=_async(function(a,b){return c.createHash(b).update(a).digest()}),a.randomBytes=_async(function(a){return e(a)}),a.pbkdf2=_async(function(a,b,c,e,f){return d(a,b,c,e,f)}),a.cipher=_async(function(a,b,d,e){var f=c.createCipheriv(a,b,d);return Buffer.concat([f.update(e,"utf8"),f.final(),f.getAuthTag()])}),a.decipher=_async(function(a,b,d,e){var f=this,g=f,h=Buffer.from(e,"hex"),i=h.slice(h.byteLength-g.TAG),j=h.slice(0,h.byteLength-g.TAG),k=c.createDecipheriv(a,b,d);return k.setAuthTag(i),Buffer.concat([k.update(j),k.final()])})}else a.normalizeHash=function(a){return a.toUpperCase()},a.normalizeAlgorithm=function(a){if(0!==a.toLowerCase().indexOf("aes"))return a;var b=a.split("-");return(b[0]+"-"+b[2]).toUpperCase()},a.getAuthTag=function(a){return a.slice(a.byteLength-this.TAG)},a.hexToBuffer=_async(function(a){if("string"!=typeof a)throw new TypeError("Cyrup.hexToBuffer - expected input to be a string");if(0!=a.length%2)throw new RangeError("Cyrup.hexToBuffer - expected string to be an even number of characters");for(var b=new Uint8Array(a.length/2),c=0,d=a.length;c<d;c+=2)b[c/2]=parseInt(a.substring(c,c+2),16);return b.buffer}),a.bufferToHex=_async(function(a){for(var b=new Uint8Array(a),c=Array(b.length),d=0,e=b.length;d<e;d++)c[d]=("00"+b[d].toString(16)).slice(-2);return c.join("")}),a.stringToBuffer=_async(function(a){for(var b=new Uint8Array(a.length),c=0,d=a.length;c<d;c++)b[c]=a.charCodeAt(c);return b.buffer}),a.bufferToString=_async(function(a){for(var b=new Uint8Array(a),c=Array(b.length),d=0,e=b.length;d<e;d++)c[d]=String.fromCharCode(b[d]);return c.join("")}),a.createHash=_async(function(a,b){return window.crypto.subtle.digest(b,a)}),a.randomBytes=_async(function(a){return window.crypto.getRandomValues(new Uint8Array(a))}),a.pbkdf2=_async(function(a,b,c,d,e){return _await(window.crypto.subtle.importKey("raw",a,{name:"PBKDF2"},!1,["deriveBits"]),function(a){return _await(window.crypto.subtle.deriveBits({salt:b,iterations:c,name:"PBKDF2",hash:{name:e}},a,d<<3),function(a){return new Uint8Array(a)})})}),a.cipher=_async(function(a,b,c,d){var e=this;return _await(window.crypto.subtle.importKey("raw",b,{name:a},!1,["encrypt"]),function(b){return _await(window.crypto.subtle.encrypt({iv:c,name:a,tagLength:8*e.TAG},b,d))})}),a.decipher=_async(function(a,b,c,d){var e=this;return _await(window.crypto.subtle.importKey("raw",b,{name:a},!1,["decrypt"]),function(b){return _await(window.crypto.subtle.decrypt({iv:c,name:a,tagLength:8*e.TAG},b,d))})});return a});